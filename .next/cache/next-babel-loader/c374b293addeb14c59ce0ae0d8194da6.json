{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documents\\\\Work\\\\Test\\\\taskmanager\\\\src\\\\components\\\\tablebody.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useEffect, useState } from 'react';\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport useSWR, { mutate, trigger } from 'swr';\nimport moment from 'moment';\nimport axios from 'axios';\nimport EditTask from '../components/edittask';\nimport HeadTable from '../components/tablehead';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport config from '../common/config';\nconst fetchURL = `${config.apiGetTaskUrl}`;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: '2px 4px',\n    display: 'flex',\n    alignItems: 'center'\n  },\n  table: {\n    minWidth: 650\n  },\n  caption: {\n    display: 'flex'\n  },\n  input: {\n    width: '100%',\n    marginLeft: theme.spacing(1),\n    flex: 1\n  },\n  button: {\n    marginLeft: theme.spacing(1)\n  },\n  buttonAction: {\n    marginLeft: theme.spacing(1)\n  }\n}));\nexport default function BodyTable(props) {\n  const {\n    data,\n    dataServer,\n    dataDialog,\n    dataType,\n    dataStatus,\n    dataAssignee,\n    openDialog,\n    handleCloseDialog,\n    handleOpenDialog,\n    setLoading,\n    setOpenSnackBar,\n    setTypeSnack\n  } = props;\n  const classes = useStyles();\n  return __jsx(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, data && Array.isArray(data) && data.map(row => __jsx(TableRow, {\n    key: row.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, __jsx(TableCell, {\n    component: \"th\",\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }, row.task_name), __jsx(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }, row.task_type), __jsx(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }, moment(row.start_date).format(\"YYYY-MM-DD\")), __jsx(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }, moment(row.end_date).format(\"YYYY-MM-DD\")), __jsx(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }, row.status), __jsx(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  }, row.assignee), __jsx(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }, __jsx(Dialog, {\n    open: openDialog,\n    onClose: handleCloseDialog,\n    \"aria-labelledby\": \"alert-dialog-title\",\n    \"aria-describedby\": \"alert-dialog-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 25\n    }\n  }, __jsx(EditTask, {\n    dataServer: dataServer,\n    dataDialog: dataDialog,\n    dataType: dataType,\n    dataStatus: dataStatus,\n    dataAssignee: dataAssignee,\n    handleOpenDialog: handleOpenDialog,\n    handleCloseDialog: handleCloseDialog,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 29\n    }\n  })), __jsx(Button, {\n    className: classes.buttonAction,\n    size: \"small\",\n    color: \"secondary\",\n    startIcon: __jsx(EditIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 40\n      }\n    }),\n    onClick: () => handleOpenDialog(row),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 25\n    }\n  }, \"Edit\"), __jsx(Button, {\n    className: classes.buttonAction,\n    size: \"small\",\n    color: \"secondary\",\n    startIcon: __jsx(DeleteIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 40\n      }\n    }),\n    onClick: async () => {\n      const deleteUrl = fetchURL + \"/\" + row.id;\n      const url = fetchURL;\n      mutate(url, data.filter(c => c.id !== row.id), false);\n      setLoading(true);\n      await axios.delete(deleteUrl);\n      setLoading(false);\n      setOpenSnackBar(true);\n      setTypeSnack('Deleted Successfully');\n      trigger(url);\n      setTimeout(() => {\n        setOpenSnackBar(false);\n      }, 3000);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 25\n    }\n  }, \"Delete\")))));\n}","map":{"version":3,"sources":["D:/Documents/Work/Test/taskmanager/src/components/tablebody.js"],"names":["React","Component","makeStyles","useEffect","useState","Formik","Field","Form","ErrorMessage","useSWR","mutate","trigger","moment","axios","EditTask","HeadTable","TextField","Button","Grid","DeleteIcon","EditIcon","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","config","fetchURL","apiGetTaskUrl","useStyles","theme","root","padding","display","alignItems","table","minWidth","caption","input","width","marginLeft","spacing","flex","button","buttonAction","BodyTable","props","data","dataServer","dataDialog","dataType","dataStatus","dataAssignee","openDialog","handleCloseDialog","handleOpenDialog","setLoading","setOpenSnackBar","setTypeSnack","classes","Array","isArray","map","row","id","task_name","task_type","start_date","format","end_date","status","assignee","deleteUrl","url","filter","c","delete","setTimeout"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useEffect, useState } from 'react'\r\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\r\nimport useSWR, { mutate, trigger } from 'swr';\r\nimport moment from 'moment';\r\nimport axios from 'axios';\r\n\r\nimport EditTask from '../components/edittask'\r\nimport HeadTable from '../components/tablehead'\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nimport config from '../common/config'\r\n\r\nconst fetchURL = `${config.apiGetTaskUrl}`;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        padding: '2px 4px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n    caption: {\r\n        display: 'flex',\r\n    },\r\n    input: {\r\n        width: '100%',\r\n        marginLeft: theme.spacing(1),\r\n        flex: 1,\r\n    },\r\n    button: {\r\n        marginLeft: theme.spacing(1),\r\n    },\r\n    buttonAction: {\r\n        marginLeft: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nexport default function BodyTable(props) {\r\n    const {data, dataServer, dataDialog, dataType, dataStatus, dataAssignee, openDialog, handleCloseDialog, handleOpenDialog, setLoading, setOpenSnackBar, setTypeSnack } = props;\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <TableBody>\r\n            {data && Array.isArray(data) && data.map((row) => (\r\n                <TableRow key={row.id}>\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                        {row.task_name}\r\n                    </TableCell>\r\n                    <TableCell align=\"center\">{row.task_type}</TableCell>\r\n                    <TableCell align=\"center\">{moment(row.start_date).format(\"YYYY-MM-DD\")}</TableCell>\r\n                    <TableCell align=\"center\">{moment(row.end_date).format(\"YYYY-MM-DD\")}</TableCell>\r\n                    <TableCell align=\"center\">{row.status}</TableCell>\r\n                    <TableCell align=\"center\">{row.assignee}</TableCell>\r\n                    <TableCell align=\"center\">\r\n                        <Dialog\r\n                            open={openDialog}\r\n                            onClose={handleCloseDialog}\r\n                            aria-labelledby=\"alert-dialog-title\"\r\n                            aria-describedby=\"alert-dialog-description\"\r\n                        >\r\n                            <EditTask\r\n                                dataServer={dataServer}\r\n                                dataDialog={dataDialog}\r\n                                dataType={dataType}\r\n                                dataStatus={dataStatus}\r\n                                dataAssignee={dataAssignee}\r\n                                handleOpenDialog={handleOpenDialog}\r\n                                handleCloseDialog={handleCloseDialog}\r\n                                 />\r\n                        </Dialog>\r\n                        <Button\r\n                            className={classes.buttonAction}\r\n                            size=\"small\"\r\n                            color=\"secondary\"\r\n                            startIcon={<EditIcon />}\r\n                            onClick={() => handleOpenDialog(row)}\r\n                        >\r\n                            Edit\r\n                        </Button>\r\n                        <Button\r\n                            className={classes.buttonAction}\r\n                            size=\"small\"\r\n                            color=\"secondary\"\r\n                            startIcon={<DeleteIcon />}\r\n                            onClick={async () => {\r\n                                const deleteUrl = fetchURL + \"/\" + row.id;\r\n                                const url = fetchURL;\r\n                                mutate(url, data.filter(c => c.id !== row.id), false);\r\n                                setLoading(true);\r\n                                await axios.delete(deleteUrl);\r\n                                setLoading(false);\r\n                                setOpenSnackBar(true);\r\n                                setTypeSnack('Deleted Successfully');\r\n                                trigger(url);\r\n                                setTimeout(() => {\r\n                                    setOpenSnackBar(false)\r\n                                }, 3000);\r\n                            }}\r\n                        >\r\n                            Delete\r\n                                    </Button>\r\n                    </TableCell>\r\n                </TableRow>\r\n            ))}\r\n        </TableBody>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}