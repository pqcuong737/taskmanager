{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"D:\\\\Documents\\\\Work\\\\Test\\\\taskmanager\\\\src\\\\components\\\\addtask.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useEffect, useState } from 'react';\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport useSWR, { mutate, trigger } from 'swr';\nimport moment from 'moment';\nimport axios from 'axios';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport config from '../common/config';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      padding: '2px 4px',\n      display: 'flex',\n      alignItems: 'center'\n    },\n    table: {\n      minWidth: 650\n    },\n    caption: {\n      display: 'flex'\n    },\n    input: {\n      width: '100%',\n      marginLeft: theme.spacing(1),\n      flex: 1\n    },\n    button: {\n      marginLeft: theme.spacing(1)\n    },\n    buttonAction: {\n      marginLeft: theme.spacing(1)\n    }\n  };\n});\nvar fetchURL = \"\".concat(config.apiGetTaskUrl);\nexport default function AddTask(props) {\n  _s();\n\n  var _this = this;\n\n  var dataServer = props.dataServer,\n      dataType = props.dataType,\n      dataStatus = props.dataStatus,\n      dataAssignee = props.dataAssignee,\n      setLoading = props.setLoading,\n      setOpenSnackBar = props.setOpenSnackBar,\n      setTypeSnack = props.setTypeSnack;\n\n  var _useSWR = useSWR(fetchURL, {\n    initialData: dataServer\n  }),\n      data = _useSWR.data;\n\n  var classes = useStyles();\n  return __jsx(Formik, {\n    initialValues: {\n      task_name: '',\n      task_type: 'Task',\n      start_date: moment(new Date()).format('YYYY-MM-DD').toString(),\n      end_date: moment(new Date()).format('YYYY-MM-DD').toString(),\n      status: 'New',\n      assignee: 'NguyenHao'\n    },\n    onSubmit: /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values, formikHelpers) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                mutate(fetchURL, [].concat(_toConsumableArray(data), [values]), false);\n                setLoading(true);\n                _context.next = 4;\n                return axios.post(fetchURL, values);\n\n              case 4:\n                setLoading(false);\n                setTypeSnack(\"Added Successfully\");\n                setOpenSnackBar(true);\n                setTimeout(function () {\n                  setOpenSnackBar(false);\n                }, 3000);\n                trigger(fetchURL);\n                console.log(dataDialog);\n                formikHelpers.resetForm();\n                console.log(\"homepage -> typeSnack\", typeSnack);\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, __jsx(Form, {\n    display: \"flex\",\n    p: 1,\n    className: classes.root,\n    noValidate: true,\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, __jsx(Field, {\n    as: TextField,\n    name: \"task_name\",\n    className: classes.input,\n    id: \"outlined-basic\",\n    size: \"small\",\n    variant: \"outlined\",\n    placeholder: \"task_name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }), __jsx(Field, {\n    as: TextField,\n    select: true,\n    name: \"task_type\",\n    className: classes.input,\n    id: \"outlined-basic\",\n    size: \"small\",\n    variant: \"outlined\",\n    placeholder: \"task_type\" //onChange={handleChangeComboType}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, dataType.map(function (option) {\n    return __jsx(\"option\", {\n      key: option.id,\n      value: option.tasktype_name,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 25\n      }\n    }, option.tasktype_name);\n  })), __jsx(Field, {\n    as: TextField,\n    type: \"date\",\n    id: \"outlined-basic\",\n    name: \"start_date\",\n    className: classes.input,\n    size: \"small\",\n    defaultValue: moment(new Date()),\n    variant: \"outlined\",\n    placeholder: \"start_date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }), __jsx(Field, {\n    as: TextField,\n    type: \"date\",\n    id: \"outlined-basic\",\n    name: \"end_date\",\n    className: classes.input,\n    size: \"small\",\n    defaultValue: moment(new Date()),\n    variant: \"outlined\",\n    placeholder: \"end_date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }), __jsx(Field, {\n    as: TextField,\n    select: true,\n    name: \"status\",\n    className: classes.input,\n    id: \"outlined-basic\",\n    size: \"small\",\n    variant: \"outlined\",\n    placeholder: \"status\" //onChange={handleChangeComboStatus}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  }, dataStatus && dataStatus.length && dataStatus.map(function (option, id) {\n    return __jsx(\"option\", {\n      key: id,\n      value: option.status_name,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 25\n      }\n    }, option.status_name);\n  })), __jsx(Field, {\n    as: TextField,\n    select: true,\n    name: \"assignee\",\n    className: classes.input,\n    id: \"outlined-basic\",\n    size: \"small\",\n    variant: \"outlined\",\n    placeholder: \"assignee\" //onChange={handleChangeComboAssignee}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }\n  }, dataAssignee.map(function (option, id) {\n    return __jsx(\"option\", {\n      key: id,\n      value: option.username,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 25\n      }\n    }, option.username);\n  })), __jsx(Button, {\n    className: classes.button,\n    type: \"submit\",\n    variant: \"contained\",\n    size: \"medium\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }\n  }, \"ADD\")));\n}\n\n_s(AddTask, \"i+F7P2tNVlPx5WhqQZ0fsd1wVZ0=\", false, function () {\n  return [useSWR, useStyles];\n});\n\n_c = AddTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTask\");","map":{"version":3,"sources":["D:/Documents/Work/Test/taskmanager/src/components/addtask.js"],"names":["React","Component","makeStyles","useEffect","useState","Formik","Field","Form","ErrorMessage","useSWR","mutate","trigger","moment","axios","TextField","Button","config","useStyles","theme","root","padding","display","alignItems","table","minWidth","caption","input","width","marginLeft","spacing","flex","button","buttonAction","fetchURL","apiGetTaskUrl","AddTask","props","dataServer","dataType","dataStatus","dataAssignee","setLoading","setOpenSnackBar","setTypeSnack","initialData","data","classes","task_name","task_type","start_date","Date","format","toString","end_date","status","assignee","values","formikHelpers","post","setTimeout","console","log","dataDialog","resetForm","typeSnack","map","option","id","tasktype_name","length","status_name","username"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useEffect, useState } from 'react'\r\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\r\nimport useSWR, { mutate, trigger } from 'swr';\r\nimport moment from 'moment';\r\nimport axios from 'axios';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport config from '../common/config'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        padding: '2px 4px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n    caption: {\r\n        display: 'flex',\r\n    },\r\n    input: {\r\n        width: '100%',\r\n        marginLeft: theme.spacing(1),\r\n        flex: 1,\r\n    },\r\n    button: {\r\n        marginLeft: theme.spacing(1),\r\n    },\r\n    buttonAction: {\r\n        marginLeft: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nconst fetchURL = `${config.apiGetTaskUrl}`;\r\n\r\nexport default function AddTask(props) {\r\n    const { dataServer, dataType, dataStatus, dataAssignee, setLoading, setOpenSnackBar, setTypeSnack } = props;\r\n    const { data } = useSWR(fetchURL, { initialData: dataServer });\r\n    const classes = useStyles();\r\n    return (\r\n        <Formik\r\n            initialValues={{\r\n                task_name: '',\r\n                task_type: 'Task',\r\n                start_date: moment(new Date()).format('YYYY-MM-DD').toString(),\r\n                end_date: moment(new Date()).format('YYYY-MM-DD').toString(),\r\n                status: 'New',\r\n                assignee: 'NguyenHao',\r\n            }}\r\n            onSubmit={async (values, formikHelpers) => {\r\n                mutate(fetchURL, [...data, values], false);\r\n                setLoading(true);\r\n                await axios.post(fetchURL, values);\r\n                setLoading(false);\r\n                setTypeSnack(\"Added Successfully\");\r\n                setOpenSnackBar(true);\r\n                setTimeout(() => {\r\n                    setOpenSnackBar(false);\r\n                }, 3000);\r\n                trigger(fetchURL);\r\n                console.log(dataDialog);\r\n                formikHelpers.resetForm();\r\n                console.log(\"homepage -> typeSnack\", typeSnack)\r\n            }}\r\n        >\r\n            <Form display=\"flex\" p={1} className={classes.root} noValidate autoComplete=\"off\">\r\n                <Field as={TextField}\r\n                    name=\"task_name\"\r\n                    className={classes.input}\r\n                    id=\"outlined-basic\"\r\n                    size=\"small\"\r\n                    variant=\"outlined\"\r\n                    placeholder=\"task_name\" />\r\n                <Field as={TextField}\r\n                    select\r\n                    name=\"task_type\"\r\n                    className={classes.input}\r\n                    id=\"outlined-basic\"\r\n                    size=\"small\"\r\n                    variant=\"outlined\"\r\n                    placeholder=\"task_type\"\r\n                //onChange={handleChangeComboType}\r\n                >\r\n                    {dataType.map((option) => (\r\n                        <option key={option.id} value={option.tasktype_name}>\r\n                            {option.tasktype_name}\r\n                        </option>\r\n                    ))}\r\n                </Field>\r\n                <Field as={TextField}\r\n                    type=\"date\"\r\n                    id=\"outlined-basic\"\r\n                    name=\"start_date\"\r\n                    className={classes.input}\r\n                    size=\"small\"\r\n                    defaultValue={moment(new Date())}\r\n                    variant=\"outlined\"\r\n                    placeholder=\"start_date\" />\r\n                <Field as={TextField}\r\n                    type=\"date\"\r\n                    id=\"outlined-basic\"\r\n                    name=\"end_date\"\r\n                    className={classes.input}\r\n                    size=\"small\"\r\n                    defaultValue={moment(new Date())}\r\n                    variant=\"outlined\"\r\n                    placeholder=\"end_date\" />\r\n                <Field as={TextField}\r\n                    select\r\n                    name=\"status\"\r\n                    className={classes.input}\r\n                    id=\"outlined-basic\"\r\n                    size=\"small\"\r\n                    variant=\"outlined\"\r\n                    placeholder=\"status\"\r\n                //onChange={handleChangeComboStatus}\r\n                >\r\n                    {dataStatus && dataStatus.length && dataStatus.map((option, id) => (\r\n                        <option key={id} value={option.status_name}>\r\n                            {option.status_name}\r\n                        </option>\r\n                    ))}\r\n                </Field>\r\n                <Field as={TextField}\r\n                    select\r\n                    name=\"assignee\"\r\n                    className={classes.input}\r\n                    id=\"outlined-basic\"\r\n                    size=\"small\"\r\n                    variant=\"outlined\"\r\n                    placeholder=\"assignee\"\r\n                //onChange={handleChangeComboAssignee}\r\n                >\r\n                    {dataAssignee.map((option, id) => (\r\n                        <option key={id} value={option.username}>\r\n                            {option.username}\r\n                        </option>\r\n                    ))}\r\n                </Field>\r\n                <Button className={classes.button} type=\"submit\" variant=\"contained\" size=\"medium\" color=\"primary\" >\r\n                    ADD\r\n            </Button>\r\n            </Form>\r\n        </Formik>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}