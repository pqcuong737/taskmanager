{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/home/pqcuong/Documents/Work/test/taskmanager/src/components/tablebody.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useEffect, useState } from 'react';\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport useSWR, { mutate, trigger } from 'swr';\nimport moment from 'moment';\nimport axios from 'axios';\nimport EditTask from '../components/edittask';\nimport HeadTable from '../components/tablehead';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport config from '../common/config';\nvar fetchURL = \"\".concat(config.apiGetTaskUrl);\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      padding: '2px 4px',\n      display: 'flex',\n      alignItems: 'center'\n    },\n    table: {\n      minWidth: 650\n    },\n    caption: {\n      display: 'flex'\n    },\n    input: {\n      width: '100%',\n      marginLeft: theme.spacing(1),\n      flex: 1\n    },\n    button: {\n      marginLeft: theme.spacing(1)\n    },\n    buttonAction: {\n      marginLeft: theme.spacing(1)\n    }\n  };\n});\nexport default function BodyTable(props) {\n  _s();\n\n  var _this = this;\n\n  var data = props.data,\n      dataServer = props.dataServer,\n      dataDialog = props.dataDialog,\n      dataType = props.dataType,\n      dataStatus = props.dataStatus,\n      dataAssignee = props.dataAssignee,\n      openDialog = props.openDialog,\n      handleCloseDialog = props.handleCloseDialog,\n      handleOpenDialog = props.handleOpenDialog,\n      setLoading = props.setLoading,\n      setOpenSnackBar = props.setOpenSnackBar,\n      setTypeSnack = props.setTypeSnack;\n  var classes = useStyles();\n  return __jsx(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, data && Array.isArray(data) && data.map(function (row) {\n    return __jsx(TableRow, {\n      key: row.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, __jsx(TableCell, {\n      component: \"th\",\n      scope: \"row\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    }, row.task_name), __jsx(TableCell, {\n      align: \"center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }\n    }, row.task_type), __jsx(TableCell, {\n      align: \"center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }, moment(row.start_date).format(\"YYYY-MM-DD\")), __jsx(TableCell, {\n      align: \"center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }\n    }, moment(row.end_date).format(\"YYYY-MM-DD\")), __jsx(TableCell, {\n      align: \"center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }\n    }, row.status), __jsx(TableCell, {\n      align: \"center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }\n    }, row.assignee), __jsx(TableCell, {\n      align: \"center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }\n    }, __jsx(Dialog, {\n      open: openDialog,\n      onClose: handleCloseDialog,\n      \"aria-labelledby\": \"alert-dialog-title\",\n      \"aria-describedby\": \"alert-dialog-description\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 25\n      }\n    }, __jsx(EditTask, {\n      dataServer: dataServer,\n      dataDialog: dataDialog,\n      dataType: dataType,\n      dataStatus: dataStatus,\n      dataAssignee: dataAssignee,\n      handleOpenDialog: handleOpenDialog,\n      handleCloseDialog: handleCloseDialog,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 29\n      }\n    })), __jsx(Button, {\n      className: classes.buttonAction,\n      size: \"small\",\n      color: \"secondary\",\n      startIcon: __jsx(EditIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 40\n        }\n      }),\n      onClick: function onClick() {\n        return handleOpenDialog(row);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 25\n      }\n    }, \"Edit\"), __jsx(Button, {\n      className: classes.buttonAction,\n      size: \"small\",\n      color: \"secondary\",\n      startIcon: __jsx(DeleteIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 40\n        }\n      }),\n      onClick: /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var deleteUrl, url;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                deleteUrl = fetchURL + \"/\" + row.id;\n                url = fetchURL;\n                mutate(url, data.filter(function (c) {\n                  return c.id !== row.id;\n                }), false);\n                setLoading(true);\n                _context.next = 6;\n                return axios[\"delete\"](deleteUrl);\n\n              case 6:\n                setLoading(false);\n                setOpenSnackBar(true);\n                setTypeSnack('Deleted Successfully');\n                trigger(url);\n                setTimeout(function () {\n                  setOpenSnackBar(false);\n                }, 3000);\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      })),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 25\n      }\n    }, \"Delete\")));\n  }));\n}\n\n_s(BodyTable, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = BodyTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"BodyTable\");","map":{"version":3,"sources":["/home/pqcuong/Documents/Work/test/taskmanager/src/components/tablebody.js"],"names":["React","Component","makeStyles","useEffect","useState","Formik","Field","Form","ErrorMessage","useSWR","mutate","trigger","moment","axios","EditTask","HeadTable","TextField","Button","Grid","DeleteIcon","EditIcon","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","config","fetchURL","apiGetTaskUrl","useStyles","theme","root","padding","display","alignItems","table","minWidth","caption","input","width","marginLeft","spacing","flex","button","buttonAction","BodyTable","props","data","dataServer","dataDialog","dataType","dataStatus","dataAssignee","openDialog","handleCloseDialog","handleOpenDialog","setLoading","setOpenSnackBar","setTypeSnack","classes","Array","isArray","map","row","id","task_name","task_type","start_date","format","end_date","status","assignee","deleteUrl","url","filter","c","setTimeout"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useEffect, useState } from 'react'\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport useSWR, { mutate, trigger } from 'swr';\nimport moment from 'moment';\nimport axios from 'axios';\n\nimport EditTask from '../components/edittask'\nimport HeadTable from '../components/tablehead'\n\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport config from '../common/config'\n\nconst fetchURL = `${config.apiGetTaskUrl}`;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: '2px 4px',\n        display: 'flex',\n        alignItems: 'center',\n    },\n    table: {\n        minWidth: 650,\n    },\n    caption: {\n        display: 'flex',\n    },\n    input: {\n        width: '100%',\n        marginLeft: theme.spacing(1),\n        flex: 1,\n    },\n    button: {\n        marginLeft: theme.spacing(1),\n    },\n    buttonAction: {\n        marginLeft: theme.spacing(1),\n    },\n}));\n\nexport default function BodyTable(props) {\n    const {data, dataServer, dataDialog, dataType, dataStatus, dataAssignee, openDialog, handleCloseDialog, handleOpenDialog, setLoading, setOpenSnackBar, setTypeSnack } = props;\n    const classes = useStyles();\n\n    return (\n        <TableBody>\n            {data && Array.isArray(data) && data.map((row) => (\n                <TableRow key={row.id}>\n                    <TableCell component=\"th\" scope=\"row\">\n                        {row.task_name}\n                    </TableCell>\n                    <TableCell align=\"center\">{row.task_type}</TableCell>\n                    <TableCell align=\"center\">{moment(row.start_date).format(\"YYYY-MM-DD\")}</TableCell>\n                    <TableCell align=\"center\">{moment(row.end_date).format(\"YYYY-MM-DD\")}</TableCell>\n                    <TableCell align=\"center\">{row.status}</TableCell>\n                    <TableCell align=\"center\">{row.assignee}</TableCell>\n                    <TableCell align=\"center\">\n                        <Dialog\n                            open={openDialog}\n                            onClose={handleCloseDialog}\n                            aria-labelledby=\"alert-dialog-title\"\n                            aria-describedby=\"alert-dialog-description\"\n                        >\n                            <EditTask\n                                dataServer={dataServer}\n                                dataDialog={dataDialog}\n                                dataType={dataType}\n                                dataStatus={dataStatus}\n                                dataAssignee={dataAssignee}\n                                handleOpenDialog={handleOpenDialog}\n                                handleCloseDialog={handleCloseDialog}\n                                 />\n                        </Dialog>\n                        <Button\n                            className={classes.buttonAction}\n                            size=\"small\"\n                            color=\"secondary\"\n                            startIcon={<EditIcon />}\n                            onClick={() => handleOpenDialog(row)}\n                        >\n                            Edit\n                        </Button>\n                        <Button\n                            className={classes.buttonAction}\n                            size=\"small\"\n                            color=\"secondary\"\n                            startIcon={<DeleteIcon />}\n                            onClick={async () => {\n                                const deleteUrl = fetchURL + \"/\" + row.id;\n                                const url = fetchURL;\n                                mutate(url, data.filter(c => c.id !== row.id), false);\n                                setLoading(true);\n                                await axios.delete(deleteUrl);\n                                setLoading(false);\n                                setOpenSnackBar(true);\n                                setTypeSnack('Deleted Successfully');\n                                trigger(url);\n                                setTimeout(() => {\n                                    setOpenSnackBar(false)\n                                }, 3000);\n                            }}\n                        >\n                            Delete\n                                    </Button>\n                    </TableCell>\n                </TableRow>\n            ))}\n        </TableBody>\n    )\n}"]},"metadata":{},"sourceType":"module"}