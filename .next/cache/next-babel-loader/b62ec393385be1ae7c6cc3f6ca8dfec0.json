{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/home/pqcuong/Documents/Work/test/taskmanager/src/components/edittask.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useEffect, useState } from 'react';\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport useSWR, { mutate, trigger } from 'swr';\nimport moment from 'moment';\nimport axios from 'axios';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid'; //dialog\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport config from '../common/config';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      padding: '2px 4px',\n      display: 'flex',\n      alignItems: 'center'\n    },\n    table: {\n      minWidth: 650\n    },\n    caption: {\n      display: 'flex'\n    },\n    input: {\n      width: '100%',\n      marginLeft: theme.spacing(1),\n      flex: 1\n    },\n    button: {\n      marginLeft: theme.spacing(1)\n    },\n    buttonAction: {\n      marginLeft: theme.spacing(1)\n    }\n  };\n});\nvar fetchURL = \"\".concat(config.apiGetTaskUrl);\nexport default function AddTask(props) {\n  _s();\n\n  var _this = this;\n\n  var dataServer = props.dataServer,\n      dataDialog = props.dataDialog,\n      dataType = props.dataType,\n      dataStatus = props.dataStatus,\n      dataAssignee = props.dataAssignee,\n      handleCloseDialog = props.handleCloseDialog;\n\n  var _useSWR = useSWR(fetchURL, {\n    initialData: dataServer\n  }),\n      data = _useSWR.data;\n\n  var classes = useStyles();\n  return __jsx(Formik, {\n    initialValues: {\n      task_name: dataDialog.task_name,\n      task_type: dataDialog.task_type,\n      start_date: moment(dataDialog.start_date).format('YYYY-MM-DD').toString(),\n      end_date: moment(dataDialog.end_date).format('YYYY-MM-DD').toString(),\n      status: dataDialog.status,\n      assignee: dataDialog.assignee\n    },\n    onSubmit: /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(values, _ref, formikHelpers) {\n        var setSubmitting;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                setSubmitting = _ref.setSubmitting;\n                setTimeout( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n                  var editUrl;\n                  return _regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          editUrl = \"\".concat(fetchURL, \"/\").concat(dataDialog.id); //const url = fetchURL;\n                          //mutate(url);\n\n                          _context.next = 3;\n                          return axios.patch(editUrl, values);\n\n                        case 3:\n                          setSubmitting(false);\n                          window.location.reload(); //trigger(url);\n\n                        case 5:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                })), 200);\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x, _x2, _x3) {\n        return _ref2.apply(this, arguments);\n      };\n    }(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, function (_ref4) {\n    var values = _ref4.values,\n        errors = _ref4.errors,\n        touched = _ref4.touched,\n        handleChange = _ref4.handleChange,\n        handleBlur = _ref4.handleBlur,\n        handleSubmit = _ref4.handleSubmit,\n        isSubmitting = _ref4.isSubmitting;\n    return __jsx(Form, {\n      noValidate: true,\n      autoComplete: \"off\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }\n    }, __jsx(DialogContent, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 25\n      }\n    }, __jsx(Grid, {\n      container: true,\n      spacing: 2,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 29\n      }\n    }, __jsx(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 33\n      }\n    }, __jsx(Field, {\n      as: TextField,\n      name: \"task_name\",\n      className: classes.input,\n      id: \"outlined-basic\",\n      label: \"task_name\",\n      size: \"small\",\n      variant: \"outlined\",\n      onChange: handleChange,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 37\n      }\n    })), __jsx(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 33\n      }\n    }, __jsx(Field, {\n      as: TextField,\n      select: true,\n      name: \"task_type\",\n      className: classes.input,\n      id: \"outlined-basic\",\n      label: \"task_type\",\n      size: \"small\",\n      variant: \"outlined\",\n      placeholder: \"task_type\",\n      onChange: handleChange,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 37\n      }\n    }, dataType.map(function (option) {\n      return __jsx(\"option\", {\n        key: option.id,\n        value: option.tasktype_name,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 45\n        }\n      }, option.tasktype_name);\n    }))), __jsx(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 33\n      }\n    }, __jsx(Field, {\n      as: TextField,\n      type: \"date\",\n      id: \"date\",\n      label: \"task_name\",\n      name: \"start_date\",\n      className: classes.input,\n      size: \"small\",\n      defaultValue: moment(new Date()).format(\"YYYY-MM-DD\"),\n      variant: \"outlined\",\n      InputLabelProps: {\n        shrink: true\n      },\n      onChange: handleChange,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 37\n      }\n    })), __jsx(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 33\n      }\n    }, __jsx(Field, {\n      as: TextField,\n      type: \"date\",\n      id: \"date\",\n      label: \"end_date\",\n      name: \"end_date\",\n      className: classes.input,\n      size: \"small\",\n      defaultValue: moment(new Date()).format(\"YYYY-MM-DD\"),\n      variant: \"outlined\",\n      InputLabelProps: {\n        shrink: true\n      },\n      onChange: handleChange,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 37\n      }\n    })), __jsx(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 33\n      }\n    }, __jsx(Field, {\n      as: TextField,\n      select: true,\n      name: \"status\",\n      className: classes.input,\n      id: \"outlined-basic\",\n      label: \"task_name\",\n      size: \"small\",\n      variant: \"outlined\",\n      placeholder: \"status\",\n      defaultValue: dataDialog.status_name,\n      onChange: handleChange,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 37\n      }\n    }, dataStatus.map(function (option, id) {\n      return __jsx(\"option\", {\n        key: id,\n        value: option.status_name,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 45\n        }\n      }, option.status_name);\n    }))), __jsx(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 33\n      }\n    }, __jsx(Field, {\n      as: TextField,\n      select: true,\n      name: \"assignee\",\n      className: classes.input,\n      id: \"outlined-basic\",\n      label: \"assignee\",\n      size: \"small\",\n      variant: \"outlined\",\n      placeholder: \"assignee\",\n      onChange: handleChange,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 37\n      }\n    }, dataAssignee.map(function (option, id) {\n      return __jsx(\"option\", {\n        key: id,\n        value: option.username,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 45\n        }\n      }, option.username);\n    }))))), __jsx(DialogActions, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 25\n      }\n    }, __jsx(Button, {\n      onClick: handleCloseDialog,\n      disabled: isSubmitting,\n      color: \"secondary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 29\n      }\n    }, \"Cancel\"), __jsx(Button, {\n      className: classes.button,\n      type: \"submit\",\n      variant: \"contained\",\n      onClick: handleCloseDialog,\n      color: \"primary\",\n      autoFocus: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 29\n      }\n    }, \"Save\")));\n  });\n}\n\n_s(AddTask, \"i+F7P2tNVlPx5WhqQZ0fsd1wVZ0=\", false, function () {\n  return [useSWR, useStyles];\n});\n\n_c = AddTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTask\");","map":{"version":3,"sources":["/home/pqcuong/Documents/Work/test/taskmanager/src/components/edittask.js"],"names":["React","Component","makeStyles","useEffect","useState","Formik","Field","Form","ErrorMessage","useSWR","mutate","trigger","moment","axios","TextField","Button","Grid","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","config","useStyles","theme","root","padding","display","alignItems","table","minWidth","caption","input","width","marginLeft","spacing","flex","button","buttonAction","fetchURL","apiGetTaskUrl","AddTask","props","dataServer","dataDialog","dataType","dataStatus","dataAssignee","handleCloseDialog","initialData","data","classes","task_name","task_type","start_date","format","toString","end_date","status","assignee","values","formikHelpers","setSubmitting","setTimeout","editUrl","id","patch","window","location","reload","errors","touched","handleChange","handleBlur","handleSubmit","isSubmitting","map","option","tasktype_name","Date","shrink","status_name","username"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useEffect, useState } from 'react'\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport useSWR, { mutate, trigger } from 'swr';\nimport moment from 'moment';\nimport axios from 'axios';\n\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\n\n//dialog\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport config from '../common/config'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: '2px 4px',\n        display: 'flex',\n        alignItems: 'center',\n    },\n    table: {\n        minWidth: 650,\n    },\n    caption: {\n        display: 'flex',\n    },\n    input: {\n        width: '100%',\n        marginLeft: theme.spacing(1),\n        flex: 1,\n    },\n    button: {\n        marginLeft: theme.spacing(1),\n    },\n    buttonAction: {\n        marginLeft: theme.spacing(1),\n    },\n}));\n\nconst fetchURL = `${config.apiGetTaskUrl}`;\n\nexport default function AddTask(props) {\n    const { dataServer, dataDialog, dataType, dataStatus, dataAssignee, handleCloseDialog } = props;\n    const { data } = useSWR(fetchURL, { initialData: dataServer });\n    const classes = useStyles();\n    return (\n        <Formik\n            initialValues={{\n                task_name: dataDialog.task_name,\n                task_type: dataDialog.task_type,\n                start_date: moment(dataDialog.start_date).format('YYYY-MM-DD').toString(),\n                end_date: moment(dataDialog.end_date).format('YYYY-MM-DD').toString(),\n                status: dataDialog.status,\n                assignee: dataDialog.assignee,\n            }}\n            onSubmit={async (values, { setSubmitting }, formikHelpers) => {\n                setTimeout(async () => {\n                    const editUrl = `${fetchURL}/${dataDialog.id}`;\n                    //const url = fetchURL;\n                    //mutate(url);\n                    await axios.patch(editUrl, values);\n                    setSubmitting(false);\n                    window.location.reload();\n                    //trigger(url);\n                }, 200);\n            }}\n        >\n            {({\n                values,\n                errors,\n                touched,\n                handleChange,\n                handleBlur,\n                handleSubmit,\n                isSubmitting,\n            }) => (\n                    < Form noValidate autoComplete=\"off\">\n                        <DialogContent>\n                            <Grid container spacing={2}>\n                                <Grid item xs={12} sm={6}>\n                                    <Field as={TextField}\n                                        name=\"task_name\"\n                                        className={classes.input}\n                                        id=\"outlined-basic\"\n                                        label=\"task_name\"\n                                        size=\"small\"\n                                        variant=\"outlined\"\n                                        onChange={handleChange} />\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <Field as={TextField}\n                                        select\n                                        name=\"task_type\"\n                                        className={classes.input}\n                                        id=\"outlined-basic\"\n                                        label=\"task_type\"\n                                        size=\"small\"\n                                        variant=\"outlined\"\n                                        placeholder=\"task_type\"\n                                        onChange={handleChange} >\n                                        {dataType.map((option) => (\n                                            <option key={option.id} value={option.tasktype_name}>\n                                                {option.tasktype_name}\n                                            </option>\n                                        ))}\n                                    </Field>\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <Field as={TextField}\n                                        type=\"date\"\n                                        id=\"date\"\n                                        label=\"task_name\"\n                                        name=\"start_date\"\n                                        className={classes.input}\n                                        size=\"small\"\n                                        defaultValue={moment(new Date()).format(\"YYYY-MM-DD\")}\n                                        variant=\"outlined\"\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                        onChange={handleChange}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <Field as={TextField}\n                                        type=\"date\"\n                                        id=\"date\"\n                                        label=\"end_date\"\n                                        name=\"end_date\"\n                                        className={classes.input}\n                                        size=\"small\"\n                                        defaultValue={moment(new Date()).format(\"YYYY-MM-DD\")}\n                                        variant=\"outlined\"\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                        onChange={handleChange}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <Field as={TextField}\n                                        select\n                                        name=\"status\"\n                                        className={classes.input}\n                                        id=\"outlined-basic\"\n                                        label=\"task_name\"\n                                        size=\"small\"\n                                        variant=\"outlined\"\n                                        placeholder=\"status\"\n                                        defaultValue={dataDialog.status_name}\n                                        onChange={handleChange} >\n                                        {dataStatus.map((option, id) => (\n                                            <option key={id} value={option.status_name}>\n                                                {option.status_name}\n                                            </option>\n                                        ))}\n                                    </Field>\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <Field as={TextField}\n                                        select\n                                        name=\"assignee\"\n                                        className={classes.input}\n                                        id=\"outlined-basic\"\n                                        label=\"assignee\"\n                                        size=\"small\"\n                                        variant=\"outlined\"\n                                        placeholder=\"assignee\"\n                                        onChange={handleChange} >\n                                        {dataAssignee.map((option, id) => (\n                                            <option key={id} value={option.username}>\n                                                {option.username}\n                                            </option>\n                                        ))}\n                                    </Field>\n                                </Grid>\n                            </Grid>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={handleCloseDialog} disabled={isSubmitting} color=\"secondary\">\n                                Cancel\n                                </Button>\n                            <Button className={classes.button} type=\"submit\" variant=\"contained\" onClick={handleCloseDialog} color=\"primary\" autoFocus>\n                                Save\n                                </Button>\n                        </DialogActions>\n                    </Form>\n                )}\n        </Formik>\n    )\n}"]},"metadata":{},"sourceType":"module"}